### Register a user first if you need one (ID will be 1)
# You only need to run this once. If you run it again, you will get a "Username is already taken" error, which is correct.
POST http://localhost:8080/api/v1/auth/register
Content-Type: application/json

{
  "username": "testuser",
  "email": "test@example.com",
  "password": "password123"
}

###
### STEP 1: Trigger the automated daily quest generation for all users
# This simulates the scheduled job running at midnight.
# The endpoint is defined in your TestController.
POST http://localhost:8080/api/v1/test/generate-quests


###
### STEP 2: Get User 1's details to verify new quests were created
# After running the request above, check the "quests" list in the JSON response below.
# It should contain two new quests: one for LeetCode and one for GitHub commits.
GET http://localhost:8080/api/v1/users/1

### STEP 1: Set the target companies for User 1
# We send a PUT request with a JSON array of strings
PUT http://localhost:8080/api/v1/users/1/target-companies
Content-Type: application/json

[
  "Google",
  "Netflix",
  "Apple"
]


###
### STEP 2: Trigger the automated daily quest generation
POST http://localhost:8080/api/v1/test/generate-quests


###
### STEP 3: Check the results for User 1
GET http://localhost:8080/api/v1/users/1

### STEP 1: Set the target job roles for User 1
PUT http://localhost:8080/api/v1/users/1/target-roles
Content-Type: application/json

[
  "Backend Engineer",
  "Java Developer",
  "Cloud Engineer"
]


###
### STEP 2: Trigger the automated daily quest generation
POST http://localhost:8080/api/v1/test/generate-quests


###
### STEP 3: Check the results for User 1
GET http://localhost:8080/api/v1/users/1
